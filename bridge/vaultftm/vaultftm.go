// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package vaultftm

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// VaultBurnInstData is an auto generated low-level Go binding around an user-defined struct.
type VaultBurnInstData struct {
	Meta   uint8
	Shard  uint8
	Token  common.Address
	To     common.Address
	Amount *big.Int
	Itx    [32]byte
}

// VaultftmMetaData contains all meta data concerning the Vaultftm contract.
var VaultftmMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"incognitoAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newIncognitoProxy\",\"type\":\"address\"}],\"name\":\"UpdateIncognitoProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"UpdateTokenTotal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETH_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"incognitoAddress\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signData\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"incognitoAddress\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signData\",\"type\":\"bytes\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipientToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exchangeAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"timestamp\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getDepositedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prevVault\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isSigDataUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isWithdrawed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"migration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notEntered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"inst\",\"type\":\"bytes\"}],\"name\":\"parseBurnInst\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"meta\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"shard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"itx\",\"type\":\"bytes32\"}],\"internalType\":\"structVault.BurnInstData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prevVault\",\"outputs\":[{\"internalType\":\"contractWithdrawable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regulator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"incognitoAddress\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"timestamp\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"txId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"regulatorSig\",\"type\":\"bytes\"}],\"name\":\"requestWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_regulator\",\"type\":\"address\"}],\"name\":\"setRegulator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sigDataUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"sigToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"inst\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"heights\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"instPaths\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"instPathIsLefts\",\"type\":\"bool[]\"},{\"internalType\":\"bytes32\",\"name\":\"instRoots\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blkData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"sigIdxs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"sigVs\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"sigRs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"sigSs\",\"type\":\"bytes32[]\"}],\"name\":\"submitBurnProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalDepositedToSCAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"updateAssets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"inst\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"heights\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"instPaths\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"instPathIsLefts\",\"type\":\"bool[]\"},{\"internalType\":\"bytes32\",\"name\":\"instRoots\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blkData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"sigIdxs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"sigVs\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"sigRs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"sigSs\",\"type\":\"bytes32[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"withdrawed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x60806040526005805460ff60a81b1960ff60a01b19909116600160a01b1716905534801561002c57600080fd5b506135a48061003c6000396000f3fe6080604052600436106101855760003560e01c8063995fac11116100d1578063cf54aaa01161008a578063e4bd707411610064578063e4bd707414610457578063f75b98ce14610477578063fa84702e14610497578063fee8efda146104ac5761018c565b8063cf54aaa0146103f5578063dca40d9e14610422578063dd8fee14146104425761018c565b8063995fac111461034d578063a3f5d8cc1461036d578063a807b5bb14610382578063c4d66de8146103a2578063c791d705146103c2578063cde0a4f8146103d55761018c565b80636304541c1161013e57806373bf96511161011857806373bf9651146102cd578063749c5f86146102ed5780637e16e6e11461030d5780638588ccd61461033a5761018c565b80636304541c1461026057806365b5a00f1461028d57806370a08231146102ad5761018c565b80631beb7de2146101915780631ea1940e146101b35780631ed4276d146101e9578063392e53cd146102095780633fec6b401461021e57806358bc83371461024b5761018c565b3661018c57005b600080fd5b34801561019d57600080fd5b506101b16101ac366004612d9a565b6104cc565b005b3480156101bf57600080fd5b506101d36101ce366004612d06565b610934565b6040516101e091906132e6565b60405180910390f35b3480156101f557600080fd5b506101d3610204366004612c82565b610949565b34801561021557600080fd5b506101d3610b6a565b34801561022a57600080fd5b5061023e610239366004612d58565b610b7a565b6040516101e091906131c6565b34801561025757600080fd5b5061023e610c09565b34801561026c57600080fd5b5061028061027b366004612a97565b610c0e565b6040516101e0919061339e565b34801561029957600080fd5b506102806102a8366004612ae0565b610c20565b3480156102b957600080fd5b506102806102c8366004612a97565b610c3d565b3480156102d957600080fd5b506101b16102e8366004612d9a565b610cd8565b3480156102f957600080fd5b506101d3610308366004612d06565b611052565b34801561031957600080fd5b5061032d610328366004612d1e565b611109565b6040516101e091906133d8565b6101b1610348366004612b18565b61118b565b34801561035957600080fd5b506101d3610368366004612ae0565b611623565b34801561037957600080fd5b506101d3611643565b34801561038e57600080fd5b506101b161039d366004612bf0565b611653565b3480156103ae57600080fd5b506101b16103bd366004612a97565b611932565b6101b16103d0366004612fb2565b6119aa565b3480156103e157600080fd5b506101b16103f0366004612a97565b611abe565b34801561040157600080fd5b50610415610410366004612a97565b611b3f565b6040516101e091906134c9565b34801561042e57600080fd5b506101d361043d366004612d06565b611bbd565b34801561044e57600080fd5b5061023e611bd2565b34801561046357600080fd5b506101d3610472366004612d06565b611be1565b34801561048357600080fd5b50610280610492366004612ae0565b611c48565b3480156104a357600080fd5b5061023e611d74565b3480156104b857600080fd5b506101b16104c7366004612ecb565b611d83565b600554600160a01b900460ff166104e36001611fef565b9061050a5760405162461bcd60e51b815260040161050191906133c5565b60405180910390fd5b506005805460ff60a01b191690558951608211156105286006611fef565b906105465760405162461bcd60e51b815260040161050191906133c5565b5061054f6127e8565b6105588b611109565b9050806000015160ff16609b1480156105785750806020015160ff166001145b6105826006611fef565b906105a05760405162461bcd60e51b815260040161050191906133c5565b506105ae8160a00151611052565b156105b96005611fef565b906105d75760405162461bcd60e51b815260040161050191906133c5565b5060a081015160009081526020819052604090819020805460ff191660011790558101516001600160a01b0316610662576040808201516001600160a01b0316600090815260046020522054608082015161063191612118565b47101561063e6007611fef565b9061065c5760405162461bcd60e51b815260040161050191906133c5565b50610774565b60006106718260400151611b3f565b905060098160ff16111561069e5760808201516106989060081960ff841601600a0a61217e565b60808301525b6040808301516001600160a01b031660009081526004602052205460808301516106c791612118565b82604001516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016106f791906131c6565b60206040518083038186803b15801561070f57600080fd5b505afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190613028565b10156107536007611fef565b906107715760405162461bcd60e51b815260040161050191906133c5565b50505b6107868b8b8b8b8b8b8b8b8b8b6121e0565b60408101516001600160a01b031661082f57600081606001516001600160a01b031682608001516040516107b9906131c3565b60006040518083038185875af1925050503d80600081146107f6576040519150601f19603f3d011682016040523d82523d6000602084013e6107fb565b606091505b505090508061080a6004611fef565b906108285760405162461bcd60e51b815260040161050191906133c5565b50506108cd565b80604001516001600160a01b031663a9059cbb826060015183608001516040518363ffffffff1660e01b81526004016108699291906131fe565b600060405180830381600087803b15801561088357600080fd5b505af1158015610897573d6000803e3d6000fd5b505050506108a36122db565b6108ad6004611fef565b906108cb5760405162461bcd60e51b815260040161050191906133c5565b505b7f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb81604001518260600151836080015160405161090c939291906131da565b60405180910390a150506005805460ff60a01b1916600160a01b179055505050505050505050565b60016020526000908152604090205460ff1681565b6005546000906001600160a01b03161580159061097057506005546001600160a01b031633145b61097a600c611fef565b906109985760405162461bcd60e51b815260040161050191906133c5565b508382146109a6600a611fef565b906109c45760405162461bcd60e51b815260040161050191906133c5565b50600560009054906101000a90046001600160a01b03166001600160a01b0316635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b9190612cea565b610a55600d611fef565b90610a735760405162461bcd60e51b815260040161050191906133c5565b5060005b84811015610b2157610ada848483818110610a8e57fe5b9050602002013560046000898986818110610aa557fe5b9050602002016020810190610aba9190612a97565b6001600160a01b0316815260208101919091526040016000205490612118565b60046000888885818110610aea57fe5b9050602002016020810190610aff9190612a97565b6001600160a01b03168152602081019190915260400160002055600101610a77565b507f6a7fbbcddfd518bb8c56b28ac6c7acb0f7ca093ed232eb3306e53d14e469895f85858585604051610b579493929190613267565b60405180910390a1506001949350505050565b600554600160a81b900460ff1681565b600080600080602086015191506040860151925085604081518110610b9b57fe5b602001015160f81c60f81b60f81c601b01905060018582848660405160008152602001604052604051610bd194939291906133a7565b6020604051602081039080840390855afa158015610bf3573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b600081565b60046020526000908152604090205481565b600260209081526000928352604080842090915290825290205481565b60006001600160a01b038216610c54575047610cd3565b6040516370a0823160e01b81526001600160a01b038316906370a0823190610c809030906004016131c6565b60206040518083038186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190613028565b90505b919050565b600554600160a01b900460ff16610cef6001611fef565b90610d0d5760405162461bcd60e51b815260040161050191906133c5565b506005805460ff60a01b19169055895160821115610d2b6006611fef565b90610d495760405162461bcd60e51b815260040161050191906133c5565b50610d526127e8565b610d5b8b611109565b9050806000015160ff16609c148015610d7b5750806020015160ff166001145b610d856006611fef565b90610da35760405162461bcd60e51b815260040161050191906133c5565b50610db18160a00151611052565b15610dbc6005611fef565b90610dda5760405162461bcd60e51b815260040161050191906133c5565b5060a081015160009081526020819052604090819020805460ff191660011790558101516001600160a01b0316610e65576040808201516001600160a01b03166000908152600460205220546080820151610e3491612118565b471015610e416007611fef565b90610e5f5760405162461bcd60e51b815260040161050191906133c5565b50610f77565b6000610e748260400151611b3f565b905060098160ff161115610ea1576080820151610e9b9060081960ff841601600a0a61217e565b60808301525b6040808301516001600160a01b03166000908152600460205220546080830151610eca91612118565b82604001516001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610efa91906131c6565b60206040518083038186803b158015610f1257600080fd5b505afa158015610f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a9190613028565b1015610f566007611fef565b90610f745760405162461bcd60e51b815260040161050191906133c5565b50505b610f898b8b8b8b8b8b8b8b8b8b6121e0565b608081015160608201516001600160a01b0390811660009081526002602090815260408083208187015190941683529290522054610fc691612118565b60608201516001600160a01b0390811660009081526002602090815260408083208187018051861685529083528184209590955560808601519451909316825260049052205461101591612118565b6040918201516001600160a01b031660009081526004602052919091205550506005805460ff60a01b1916600160a01b1790555050505050505050565b60008181526020819052604081205460ff161561107157506001610cd3565b6005546001600160a01b031661108957506000610cd3565b600554604051633a4e2fc360e11b81526001600160a01b039091169063749c5f86906110b990859060040161339e565b60206040518083038186803b1580156110d157600080fd5b505afa1580156110e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190612cea565b6111116127e8565b6111196127e8565b8260008151811061112657fe5b016020015160f81c815282518390600190811061113f57fe5b0160209081015160f81c9082015260228301516042840151606285015160828601516001600160a01b039384166040860152929091166060840152608083015260a08201529050919050565b600554600160a01b900460ff166111a26001611fef565b906111c05760405162461bcd60e51b815260040161050191906133c5565b506005805460ff60a01b19169055600061123c6111e0828d88888f61230f565b8a8a8a8a6040516020016111f8959493929190613430565b60408051601f198184030181526020601f87018190048102840181019092528583529190869086908190840183828082843760009201919091525061239592505050565b9050611248818c612439565b6001600160a01b038082166000908152600260209081526040808320938f16835292905220548a111561127b6008611fef565b906112995760405162461bcd60e51b815260040161050191906133c5565b506001600160a01b038b166000908152600460205260409020546112bd908b61257b565b6001600160a01b03808d16600081815260046020908152604080832095909555928516815260028352838120918152915220546112fa908b61257b565b60026000836001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002081905550600034905060006001600160a01b03168c6001600160a01b0316141561137757611370818c612118565b90506114b2565b6040516370a0823160e01b81528b906001600160a01b038e16906370a08231906113a59030906004016131c6565b60206040518083038186803b1580156113bd57600080fd5b505afa1580156113d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f59190613028565b10156114016007611fef565b9061141f5760405162461bcd60e51b815260040161050191906133c5565b5060405163a9059cbb60e01b81526001600160a01b038d169063a9059cbb9061144e908c908f906004016131fe565b600060405180830381600087803b15801561146857600080fd5b505af115801561147c573d6000803e3d6000fd5b505050506114886122db565b6114926004611fef565b906114b05760405162461bcd60e51b815260040161050191906133c5565b505b60006115048b838b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d6125d1565b90506115618160026000866001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b031681526020019081526020016000205461211890919063ffffffff16565b60026000856001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055506115e581600460008e6001600160a01b03166001600160a01b031681526020019081526020016000205461211890919063ffffffff16565b6001600160a01b03909b1660009081526004602052604090209a909a5550506005805460ff60a01b1916600160a01b17905550505050505050505050565b600360209081526000928352604080842090915290825290205460ff1681565b600554600160a01b900460ff1681565b600554600160a01b900460ff1661166a6001611fef565b906116885760405162461bcd60e51b815260040161050191906133c5565b506005805460ff60a01b19169055604080516020601f84018190048102820181019092528281526116d691859190859085908190840183828082843760009201919091525061273292505050565b8660006116e282611b3f565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161171291906131c6565b60206040518083038186803b15801561172a57600080fd5b505afa15801561173e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117629190613028565b90508089600960ff8516111561179d5760098460ff1603600a0a818161178457fe5b04905060098460ff1603600a0a838161179957fe5b0492505b670de0b6b3a764000081111580156117bd5750670de0b6b3a76400008311155b80156117da5750670de0b6b3a76400006117d78285612118565b11155b6117e46003611fef565b906118025760405162461bcd60e51b815260040161050191906133c5565b50846001600160a01b03166323b872dd33308e6040518463ffffffff1660e01b8152600401611833939291906131da565b600060405180830381600087803b15801561184d57600080fd5b505af1158015611861573d6000803e3d6000fd5b5050505061186d6122db565b6118776004611fef565b906118955760405162461bcd60e51b815260040161050191906133c5565b508a6118aa836118a48f610c3d565b9061257b565b146118b5600a611fef565b906118d35760405162461bcd60e51b815260040161050191906133c5565b507f2d4b597935f3cd67fb2eebf1db4debc934cee5c7baa7153f980fdbeb2e74084e8c8b8b846040516119099493929190613231565b60405180910390a150506005805460ff60a01b1916600160a01b17905550505050505050505050565b600554600160a81b900460ff161561194a600f611fef565b906119685760405162461bcd60e51b815260040161050191906133c5565b5060058054600160a01b600160a81b6001600160a01b03199092166001600160a01b03949094169390931760ff60a81b19161760ff60a01b1916919091179055565b600554600160a01b900460ff166119c16001611fef565b906119df5760405162461bcd60e51b815260040161050191906133c5565b506005805460ff60a01b191690556b033b2e3c9fd0803ce8000000471115611a076002611fef565b90611a255760405162461bcd60e51b815260040161050191906133c5565b50611a668383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061273292505050565b7f2d4b597935f3cd67fb2eebf1db4debc934cee5c7baa7153f980fdbeb2e74084e6000868634604051611a9c9493929190613231565b60405180910390a150506005805460ff60a01b1916600160a01b179055505050565b6006546001600160a01b03161580611ae057506006546001600160a01b031633145b8015611af457506001600160a01b03811615155b611afe6011611fef565b90611b1c5760405162461bcd60e51b815260040161050191906133c5565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b600080829050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611b7e57600080fd5b505afa158015611b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb69190613028565b9392505050565b60006020819052908152604090205460ff1681565b6006546001600160a01b031681565b60008181526001602052604081205460ff1615611c0057506001610cd3565b6005546001600160a01b0316611c1857506000610cd3565b60055460405163392f5c1d60e21b81526001600160a01b039091169063e4bd7074906110b990859060040161339e565b6005546000906001600160a01b031615801590611c8b57506001600160a01b0380831660009081526003602090815260408083209387168352929052205460ff16155b15611d4757600554604051637badcc6760e11b8152611d40916001600160a01b03169063f75b98ce90611cc49087908790600401613217565b60206040518083038186803b158015611cdc57600080fd5b505afa158015611cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d149190613028565b6001600160a01b0380851660009081526002602090815260408083209389168352929052205490612118565b9050610c03565b506001600160a01b0380821660009081526002602090815260408083209386168352929052205492915050565b6005546001600160a01b031681565b600554600160a01b900460ff16611d9a6001611fef565b90611db85760405162461bcd60e51b815260040161050191906133c5565b506005805460ff60a01b19169055604080516020601f8401819004810282018101909252828152611e0691859190859085908190840183828082843760009201919091525061273292505050565b6000611e71611e1960018c89898e61230f565b8d8d604051602001611e2d93929190613479565b60408051601f198184030181526020601f8c018190048102840181019092528a835291908b908b908190840183828082843760009201919091525061239592505050565b9050611e7d818b612439565b6001600160a01b038082166000908152600260209081526040808320938e1683529290522054891115611eb06008611fef565b90611ece5760405162461bcd60e51b815260040161050191906133c5565b506001600160a01b038082166000908152600260209081526040808320938e1683529290522054611eff908a61257b565b6001600160a01b038083166000908152600260209081526040808320938f168352928152828220939093556004909252902054611f3c908a61257b565b6001600160a01b038b16600081815260046020526040902091909155899015611f90576000611f6a8c611b3f565b905060098160ff161115611f8e5760098160ff1603600a0a8b81611f8a57fe5b0491505b505b7f2d4b597935f3cd67fb2eebf1db4debc934cee5c7baa7153f980fdbeb2e74084e8b8e8e84604051611fc59493929190613231565b60405180910390a150506005805460ff60a01b1916600160a01b1790555050505050505050505050565b60606000826011811115611fff57fe5b60408051600a808252818301909252919250906060908260208201818036833701905050905060005b60ff841615612076578151600a60ff959095168581049560018401939106916030830160f81b918591811061205957fe5b60200101906001600160f81b031916908160001a90535050612028565b6060816001016001600160401b038111801561209157600080fd5b506040519080825280601f01601f1916602001820160405280156120bc576020820181803683370190505b50905060005b82811161210d5783818403815181106120d757fe5b602001015160f81c60f81b8282815181106120ee57fe5b60200101906001600160f81b031916908160001a9053506001016120c2565b509695505050505050565b600082820183811080159061212d5750828110155b6040518060400160405280601281526020017129b0b332a6b0ba341032bc31b2b83a34b7b760711b815250906121765760405162461bcd60e51b815260040161050191906133c5565b509392505050565b600082820283158061212d57508284828161219557fe5b04146040518060400160405280601281526020017129b0b332a6b0ba341032bc31b2b83a34b7b760711b815250906121765760405162461bcd60e51b815260040161050191906133c5565b60008a8a6040516020016121f59291906131a1565b6040516020818303038152906040528051906020012090506122156127c3565b6001600160a01b031663f65d21166001838d8d8d8d8d8d8d8d8d6040518c63ffffffff1660e01b81526004016122559b9a999897969594939291906132f1565b60206040518083038186803b15801561226d57600080fd5b505afa158015612281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a59190612cea565b6122af6006611fef565b906122cd5760405162461bcd60e51b815260040161050191906133c5565b505050505050505050505050565b6000803d80156122f257602081146122fb57612307565b60019150612307565b60206000803e60005191505b501515905090565b61231761281d565b61231f61281d565b604051806080016040528088600181111561233657fe5b8152602001876001600160a01b0316815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200184905291505095945050505050565b815160208301206000906123a881611be1565b156123b36005611fef565b906123d15760405162461bcd60e51b815260040161050191906133c5565b5060006123de8483610b7a565b90506001600160a01b03811615156123f66010611fef565b906124145760405162461bcd60e51b815260040161050191906133c5565b506000918252600160208190526040909220805460ff19169092179091559392505050565b6005546001600160a01b03161580159061247957506001600160a01b0380831660009081526003602090815260408083209385168352929052205460ff16155b1561257757600554604051637badcc6760e11b815261252e916001600160a01b03169063f75b98ce906124b29085908790600401613217565b60206040518083038186803b1580156124ca57600080fd5b505afa1580156124de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125029190613028565b6001600160a01b0380851660009081526002602090815260408083209387168352929052205490612118565b6001600160a01b038084166000818152600260209081526040808320948716808452948252808320959095559181526003825283812092815291905220805460ff191660011790555b5050565b6000828211156040518060400160405280601281526020017129b0b332a6b0ba341032bc31b2b83a34b7b760711b815250906125ca5760405162461bcd60e51b815260040161050191906133c5565b5050900390565b6000806125dd86610c3d565b90506001600160a01b0386166125fa576125f7813461257b565b90505b844710156126086007611fef565b906126265760405162461bcd60e51b815260040161050191906133c5565b5060006060846001600160a01b031687876040516126449190613185565b60006040518083038185875af1925050503d8060008114612681576040519150601f19603f3d011682016040523d82523d6000602084013e612686565b606091505b5091509150816126966004611fef565b906126b45760405162461bcd60e51b815260040161050191906133c5565b50600080828060200190518101906126cc9190612ab3565b91509150896001600160a01b0316826001600160a01b03161480156126fc5750806126fa866118a48d610c3d565b145b6127066009611fef565b906127245760405162461bcd60e51b815260040161050191906133c5565b509998505050505050505050565b6000612781826040518060400160405280336001600160a01b031681526020018681525060405160200161276691906134a9565b60405160208183030381529060405280519060200120610b7a565b6006549091506001600160a01b0380831691161461279f6010611fef565b906127bd5760405162461bcd60e51b815260040161050191906133c5565b50505050565b7f62135fc083646fdb4e1a9d700e351b886a4a5a39da980650269edd1ade91ffd25490565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160808101909152806000815260200160006001600160a01b0316815260200160608152602001600081525090565b8035610c0381613548565b60008083601f84011261286b578182fd5b5081356001600160401b03811115612881578182fd5b602083019150836020808302850101111561289b57600080fd5b9250929050565b600082601f8301126128b2578081fd5b81356128c56128c0826134fd565b6134d7565b8181529150602080830190848101818402860182018710156128e657600080fd5b60005b8481101561290e5781356128fc81613560565b845292820192908201906001016128e9565b505050505092915050565b600082601f830112612929578081fd5b81356129376128c0826134fd565b81815291506020808301908481018184028601820187101561295857600080fd5b60005b8481101561290e5781358452928201929082019060010161295b565b600082601f830112612987578081fd5b81356129956128c0826134fd565b8181529150602080830190848101818402860182018710156129b657600080fd5b6000805b858110156129e457823560ff811681146129d2578283fd5b855293830193918301916001016129ba565b50505050505092915050565b60008083601f840112612a01578182fd5b5081356001600160401b03811115612a17578182fd5b60208301915083602082850101111561289b57600080fd5b600082601f830112612a3f578081fd5b81356001600160401b03811115612a54578182fd5b612a67601f8201601f19166020016134d7565b9150808252836020828501011115612a7e57600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215612aa8578081fd5b8135611bb681613548565b60008060408385031215612ac5578081fd5b8251612ad081613548565b6020939093015192949293505050565b60008060408385031215612af2578182fd5b8235612afd81613548565b91506020830135612b0d81613548565b809150509250929050565b60008060008060008060008060008060e08b8d031215612b36578586fd5b8a35612b4181613548565b995060208b0135985060408b0135612b5881613548565b9750612b678c60608d0161284f565b965060808b01356001600160401b0380821115612b82578788fd5b612b8e8e838f016129f0565b909850965060a08d0135915080821115612ba6578586fd5b612bb28e838f016129f0565b909650945060c08d0135915080821115612bca578384fd5b50612bd78d828e016129f0565b915080935050809150509295989b9194979a5092959850565b600080600080600080600060a0888a031215612c0a578081fd5b8735612c1581613548565b96506020880135955060408801356001600160401b0380821115612c37578283fd5b612c438b838c016129f0565b909750955060608a0135945060808a0135915080821115612c62578283fd5b50612c6f8a828b016129f0565b989b979a50959850939692959293505050565b60008060008060408587031215612c97578182fd5b84356001600160401b0380821115612cad578384fd5b612cb98883890161285a565b90965094506020870135915080821115612cd1578384fd5b50612cde8782880161285a565b95989497509550505050565b600060208284031215612cfb578081fd5b8151611bb681613560565b600060208284031215612d17578081fd5b5035919050565b600060208284031215612d2f578081fd5b81356001600160401b03811115612d44578182fd5b612d5084828501612a2f565b949350505050565b60008060408385031215612d6a578182fd5b82356001600160401b03811115612d7f578283fd5b612d8b85828601612a2f565b95602094909401359450505050565b6000806000806000806000806000806101408b8d031215612db9578384fd5b8a356001600160401b0380821115612dcf578586fd5b612ddb8e838f01612a2f565b9b5060208d01359a5060408d0135915080821115612df7578586fd5b612e038e838f01612919565b995060608d0135915080821115612e18578586fd5b612e248e838f016128a2565b985060808d0135975060a08d0135965060c08d0135915080821115612e47578586fd5b612e538e838f01612919565b955060e08d0135915080821115612e68578485fd5b612e748e838f01612977565b94506101008d0135915080821115612e8a578384fd5b612e968e838f01612919565b93506101208d0135915080821115612eac578283fd5b50612eb98d828e01612919565b9150509295989b9194979a5092959850565b600080600080600080600080600080600060e08c8e031215612eeb578485fd5b6001600160401b03808d351115612f00578586fd5b612f0d8e8e358f016129f0565b909c509a50612f1f8e60208f0161284f565b995060408d013598508060608e01351115612f38578586fd5b612f488e60608f01358f016129f0565b909850965060808d0135811015612f5d578586fd5b612f6d8e60808f01358f016129f0565b909650945060a08d0135935060c08d0135811015612f89578182fd5b50612f9a8d60c08e01358e016129f0565b81935080925050509295989b509295989b9093969950565b600080600080600060608688031215612fc9578283fd5b85356001600160401b0380821115612fdf578485fd5b612feb89838a016129f0565b909750955060208801359450604088013591508082111561300a578283fd5b50613017888289016129f0565b969995985093965092949392505050565b600060208284031215613039578081fd5b5051919050565b6000815180845260208085019450808401835b83811015613071578151151587529582019590820190600101613053565b509495945050505050565b6000815180845260208085019450808401835b838110156130715781518752958201959082019060010161308f565b6000815180845260208085019450808401835b8381101561307157815160ff16875295820195908201906001016130be565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6000815180845261311f81602086016020860161351c565b601f01601f19169290920160200192915050565b600081516002811061314157fe5b83526020828101516001600160a01b03169084015260408083015160809185018290529061317190850182613107565b606093840151949093019390935250919050565b6000825161319781846020870161351c565b9190910192915050565b600083516131b381846020880161351c565b9190910191825250602001919050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b038516815260606020820181905260009061325690830185876130dd565b905082604083015295945050505050565b6040808252810184905260008560608301825b878110156132aa576020833561328f81613548565b6001600160a01b03168352928301929091019060010161327a565b5083810360208501528481526001600160fb1b038511156132c9578283fd5b602085029150818660208301370160200190815295945050505050565b901515815260200190565b60006101608d151583528c60208401528b60408401528060608401526133198184018c61307c565b9050828103608084015261332d818b613040565b90508860a08401528760c084015282810360e084015261334d818861307c565b905082810361010084015261336281876130ab565b9050828103610120840152613377818661307c565b905082810361014084015261338c818561307c565b9e9d5050505050505050505050505050565b90815260200190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252611bb66020830184613107565b600060c08201905060ff835116825260ff6020840151166020830152604083015160018060a01b03808216604085015280606086015116606085015250506080830151608083015260a083015160a083015292915050565b6000608082526134436080830188613133565b6001600160a01b03878116602085015286166040840152828103606084015261346d8185876130dd565b98975050505050505050565b60006040825261348c6040830186613133565b828103602084015261349f8185876130dd565b9695505050505050565b81516001600160a01b031681526020918201519181019190915260400190565b60ff91909116815260200190565b6040518181016001600160401b03811182821017156134f557600080fd5b604052919050565b60006001600160401b03821115613512578081fd5b5060209081020190565b60005b8381101561353757818101518382015260200161351f565b838111156127bd5750506000910152565b6001600160a01b038116811461355d57600080fd5b50565b801515811461355d57600080fdfea2646970667358221220e88db3e0ca289591885e4ec3aa26f3c3335fc8e10adcc1c2d4e525d4fe60059a64736f6c634300060c0033",
}

// VaultftmABI is the input ABI used to generate the binding from.
// Deprecated: Use VaultftmMetaData.ABI instead.
var VaultftmABI = VaultftmMetaData.ABI

// VaultftmBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use VaultftmMetaData.Bin instead.
var VaultftmBin = VaultftmMetaData.Bin

// DeployVaultftm deploys a new Ethereum contract, binding an instance of Vaultftm to it.
func DeployVaultftm(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Vaultftm, error) {
	parsed, err := VaultftmMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(VaultftmBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Vaultftm{VaultftmCaller: VaultftmCaller{contract: contract}, VaultftmTransactor: VaultftmTransactor{contract: contract}, VaultftmFilterer: VaultftmFilterer{contract: contract}}, nil
}

// Vaultftm is an auto generated Go binding around an Ethereum contract.
type Vaultftm struct {
	VaultftmCaller     // Read-only binding to the contract
	VaultftmTransactor // Write-only binding to the contract
	VaultftmFilterer   // Log filterer for contract events
}

// VaultftmCaller is an auto generated read-only Go binding around an Ethereum contract.
type VaultftmCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VaultftmTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VaultftmTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VaultftmFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VaultftmFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VaultftmSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VaultftmSession struct {
	Contract     *Vaultftm         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VaultftmCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VaultftmCallerSession struct {
	Contract *VaultftmCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// VaultftmTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VaultftmTransactorSession struct {
	Contract     *VaultftmTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// VaultftmRaw is an auto generated low-level Go binding around an Ethereum contract.
type VaultftmRaw struct {
	Contract *Vaultftm // Generic contract binding to access the raw methods on
}

// VaultftmCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VaultftmCallerRaw struct {
	Contract *VaultftmCaller // Generic read-only contract binding to access the raw methods on
}

// VaultftmTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VaultftmTransactorRaw struct {
	Contract *VaultftmTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVaultftm creates a new instance of Vaultftm, bound to a specific deployed contract.
func NewVaultftm(address common.Address, backend bind.ContractBackend) (*Vaultftm, error) {
	contract, err := bindVaultftm(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Vaultftm{VaultftmCaller: VaultftmCaller{contract: contract}, VaultftmTransactor: VaultftmTransactor{contract: contract}, VaultftmFilterer: VaultftmFilterer{contract: contract}}, nil
}

// NewVaultftmCaller creates a new read-only instance of Vaultftm, bound to a specific deployed contract.
func NewVaultftmCaller(address common.Address, caller bind.ContractCaller) (*VaultftmCaller, error) {
	contract, err := bindVaultftm(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VaultftmCaller{contract: contract}, nil
}

// NewVaultftmTransactor creates a new write-only instance of Vaultftm, bound to a specific deployed contract.
func NewVaultftmTransactor(address common.Address, transactor bind.ContractTransactor) (*VaultftmTransactor, error) {
	contract, err := bindVaultftm(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VaultftmTransactor{contract: contract}, nil
}

// NewVaultftmFilterer creates a new log filterer instance of Vaultftm, bound to a specific deployed contract.
func NewVaultftmFilterer(address common.Address, filterer bind.ContractFilterer) (*VaultftmFilterer, error) {
	contract, err := bindVaultftm(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VaultftmFilterer{contract: contract}, nil
}

// bindVaultftm binds a generic wrapper to an already deployed contract.
func bindVaultftm(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(VaultftmABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Vaultftm *VaultftmRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Vaultftm.Contract.VaultftmCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Vaultftm *VaultftmRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Vaultftm.Contract.VaultftmTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Vaultftm *VaultftmRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Vaultftm.Contract.VaultftmTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Vaultftm *VaultftmCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Vaultftm.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Vaultftm *VaultftmTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Vaultftm.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Vaultftm *VaultftmTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Vaultftm.Contract.contract.Transact(opts, method, params...)
}

// ETHTOKEN is a free data retrieval call binding the contract method 0x58bc8337.
//
// Solidity: function ETH_TOKEN() view returns(address)
func (_Vaultftm *VaultftmCaller) ETHTOKEN(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "ETH_TOKEN")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ETHTOKEN is a free data retrieval call binding the contract method 0x58bc8337.
//
// Solidity: function ETH_TOKEN() view returns(address)
func (_Vaultftm *VaultftmSession) ETHTOKEN() (common.Address, error) {
	return _Vaultftm.Contract.ETHTOKEN(&_Vaultftm.CallOpts)
}

// ETHTOKEN is a free data retrieval call binding the contract method 0x58bc8337.
//
// Solidity: function ETH_TOKEN() view returns(address)
func (_Vaultftm *VaultftmCallerSession) ETHTOKEN() (common.Address, error) {
	return _Vaultftm.Contract.ETHTOKEN(&_Vaultftm.CallOpts)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address token) view returns(uint256)
func (_Vaultftm *VaultftmCaller) BalanceOf(opts *bind.CallOpts, token common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "balanceOf", token)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address token) view returns(uint256)
func (_Vaultftm *VaultftmSession) BalanceOf(token common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.BalanceOf(&_Vaultftm.CallOpts, token)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address token) view returns(uint256)
func (_Vaultftm *VaultftmCallerSession) BalanceOf(token common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.BalanceOf(&_Vaultftm.CallOpts, token)
}

// GetDecimals is a free data retrieval call binding the contract method 0xcf54aaa0.
//
// Solidity: function getDecimals(address token) view returns(uint8)
func (_Vaultftm *VaultftmCaller) GetDecimals(opts *bind.CallOpts, token common.Address) (uint8, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "getDecimals", token)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetDecimals is a free data retrieval call binding the contract method 0xcf54aaa0.
//
// Solidity: function getDecimals(address token) view returns(uint8)
func (_Vaultftm *VaultftmSession) GetDecimals(token common.Address) (uint8, error) {
	return _Vaultftm.Contract.GetDecimals(&_Vaultftm.CallOpts, token)
}

// GetDecimals is a free data retrieval call binding the contract method 0xcf54aaa0.
//
// Solidity: function getDecimals(address token) view returns(uint8)
func (_Vaultftm *VaultftmCallerSession) GetDecimals(token common.Address) (uint8, error) {
	return _Vaultftm.Contract.GetDecimals(&_Vaultftm.CallOpts, token)
}

// GetDepositedBalance is a free data retrieval call binding the contract method 0xf75b98ce.
//
// Solidity: function getDepositedBalance(address token, address owner) view returns(uint256)
func (_Vaultftm *VaultftmCaller) GetDepositedBalance(opts *bind.CallOpts, token common.Address, owner common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "getDepositedBalance", token, owner)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetDepositedBalance is a free data retrieval call binding the contract method 0xf75b98ce.
//
// Solidity: function getDepositedBalance(address token, address owner) view returns(uint256)
func (_Vaultftm *VaultftmSession) GetDepositedBalance(token common.Address, owner common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.GetDepositedBalance(&_Vaultftm.CallOpts, token, owner)
}

// GetDepositedBalance is a free data retrieval call binding the contract method 0xf75b98ce.
//
// Solidity: function getDepositedBalance(address token, address owner) view returns(uint256)
func (_Vaultftm *VaultftmCallerSession) GetDepositedBalance(token common.Address, owner common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.GetDepositedBalance(&_Vaultftm.CallOpts, token, owner)
}

// IsInitialized is a free data retrieval call binding the contract method 0x392e53cd.
//
// Solidity: function isInitialized() view returns(bool)
func (_Vaultftm *VaultftmCaller) IsInitialized(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "isInitialized")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsInitialized is a free data retrieval call binding the contract method 0x392e53cd.
//
// Solidity: function isInitialized() view returns(bool)
func (_Vaultftm *VaultftmSession) IsInitialized() (bool, error) {
	return _Vaultftm.Contract.IsInitialized(&_Vaultftm.CallOpts)
}

// IsInitialized is a free data retrieval call binding the contract method 0x392e53cd.
//
// Solidity: function isInitialized() view returns(bool)
func (_Vaultftm *VaultftmCallerSession) IsInitialized() (bool, error) {
	return _Vaultftm.Contract.IsInitialized(&_Vaultftm.CallOpts)
}

// IsSigDataUsed is a free data retrieval call binding the contract method 0xe4bd7074.
//
// Solidity: function isSigDataUsed(bytes32 hash) view returns(bool)
func (_Vaultftm *VaultftmCaller) IsSigDataUsed(opts *bind.CallOpts, hash [32]byte) (bool, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "isSigDataUsed", hash)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSigDataUsed is a free data retrieval call binding the contract method 0xe4bd7074.
//
// Solidity: function isSigDataUsed(bytes32 hash) view returns(bool)
func (_Vaultftm *VaultftmSession) IsSigDataUsed(hash [32]byte) (bool, error) {
	return _Vaultftm.Contract.IsSigDataUsed(&_Vaultftm.CallOpts, hash)
}

// IsSigDataUsed is a free data retrieval call binding the contract method 0xe4bd7074.
//
// Solidity: function isSigDataUsed(bytes32 hash) view returns(bool)
func (_Vaultftm *VaultftmCallerSession) IsSigDataUsed(hash [32]byte) (bool, error) {
	return _Vaultftm.Contract.IsSigDataUsed(&_Vaultftm.CallOpts, hash)
}

// IsWithdrawed is a free data retrieval call binding the contract method 0x749c5f86.
//
// Solidity: function isWithdrawed(bytes32 hash) view returns(bool)
func (_Vaultftm *VaultftmCaller) IsWithdrawed(opts *bind.CallOpts, hash [32]byte) (bool, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "isWithdrawed", hash)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsWithdrawed is a free data retrieval call binding the contract method 0x749c5f86.
//
// Solidity: function isWithdrawed(bytes32 hash) view returns(bool)
func (_Vaultftm *VaultftmSession) IsWithdrawed(hash [32]byte) (bool, error) {
	return _Vaultftm.Contract.IsWithdrawed(&_Vaultftm.CallOpts, hash)
}

// IsWithdrawed is a free data retrieval call binding the contract method 0x749c5f86.
//
// Solidity: function isWithdrawed(bytes32 hash) view returns(bool)
func (_Vaultftm *VaultftmCallerSession) IsWithdrawed(hash [32]byte) (bool, error) {
	return _Vaultftm.Contract.IsWithdrawed(&_Vaultftm.CallOpts, hash)
}

// Migration is a free data retrieval call binding the contract method 0x995fac11.
//
// Solidity: function migration(address , address ) view returns(bool)
func (_Vaultftm *VaultftmCaller) Migration(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address) (bool, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "migration", arg0, arg1)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Migration is a free data retrieval call binding the contract method 0x995fac11.
//
// Solidity: function migration(address , address ) view returns(bool)
func (_Vaultftm *VaultftmSession) Migration(arg0 common.Address, arg1 common.Address) (bool, error) {
	return _Vaultftm.Contract.Migration(&_Vaultftm.CallOpts, arg0, arg1)
}

// Migration is a free data retrieval call binding the contract method 0x995fac11.
//
// Solidity: function migration(address , address ) view returns(bool)
func (_Vaultftm *VaultftmCallerSession) Migration(arg0 common.Address, arg1 common.Address) (bool, error) {
	return _Vaultftm.Contract.Migration(&_Vaultftm.CallOpts, arg0, arg1)
}

// NotEntered is a free data retrieval call binding the contract method 0xa3f5d8cc.
//
// Solidity: function notEntered() view returns(bool)
func (_Vaultftm *VaultftmCaller) NotEntered(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "notEntered")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// NotEntered is a free data retrieval call binding the contract method 0xa3f5d8cc.
//
// Solidity: function notEntered() view returns(bool)
func (_Vaultftm *VaultftmSession) NotEntered() (bool, error) {
	return _Vaultftm.Contract.NotEntered(&_Vaultftm.CallOpts)
}

// NotEntered is a free data retrieval call binding the contract method 0xa3f5d8cc.
//
// Solidity: function notEntered() view returns(bool)
func (_Vaultftm *VaultftmCallerSession) NotEntered() (bool, error) {
	return _Vaultftm.Contract.NotEntered(&_Vaultftm.CallOpts)
}

// ParseBurnInst is a free data retrieval call binding the contract method 0x7e16e6e1.
//
// Solidity: function parseBurnInst(bytes inst) pure returns((uint8,uint8,address,address,uint256,bytes32))
func (_Vaultftm *VaultftmCaller) ParseBurnInst(opts *bind.CallOpts, inst []byte) (VaultBurnInstData, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "parseBurnInst", inst)

	if err != nil {
		return *new(VaultBurnInstData), err
	}

	out0 := *abi.ConvertType(out[0], new(VaultBurnInstData)).(*VaultBurnInstData)

	return out0, err

}

// ParseBurnInst is a free data retrieval call binding the contract method 0x7e16e6e1.
//
// Solidity: function parseBurnInst(bytes inst) pure returns((uint8,uint8,address,address,uint256,bytes32))
func (_Vaultftm *VaultftmSession) ParseBurnInst(inst []byte) (VaultBurnInstData, error) {
	return _Vaultftm.Contract.ParseBurnInst(&_Vaultftm.CallOpts, inst)
}

// ParseBurnInst is a free data retrieval call binding the contract method 0x7e16e6e1.
//
// Solidity: function parseBurnInst(bytes inst) pure returns((uint8,uint8,address,address,uint256,bytes32))
func (_Vaultftm *VaultftmCallerSession) ParseBurnInst(inst []byte) (VaultBurnInstData, error) {
	return _Vaultftm.Contract.ParseBurnInst(&_Vaultftm.CallOpts, inst)
}

// PrevVault is a free data retrieval call binding the contract method 0xfa84702e.
//
// Solidity: function prevVault() view returns(address)
func (_Vaultftm *VaultftmCaller) PrevVault(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "prevVault")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PrevVault is a free data retrieval call binding the contract method 0xfa84702e.
//
// Solidity: function prevVault() view returns(address)
func (_Vaultftm *VaultftmSession) PrevVault() (common.Address, error) {
	return _Vaultftm.Contract.PrevVault(&_Vaultftm.CallOpts)
}

// PrevVault is a free data retrieval call binding the contract method 0xfa84702e.
//
// Solidity: function prevVault() view returns(address)
func (_Vaultftm *VaultftmCallerSession) PrevVault() (common.Address, error) {
	return _Vaultftm.Contract.PrevVault(&_Vaultftm.CallOpts)
}

// Regulator is a free data retrieval call binding the contract method 0xdd8fee14.
//
// Solidity: function regulator() view returns(address)
func (_Vaultftm *VaultftmCaller) Regulator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "regulator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Regulator is a free data retrieval call binding the contract method 0xdd8fee14.
//
// Solidity: function regulator() view returns(address)
func (_Vaultftm *VaultftmSession) Regulator() (common.Address, error) {
	return _Vaultftm.Contract.Regulator(&_Vaultftm.CallOpts)
}

// Regulator is a free data retrieval call binding the contract method 0xdd8fee14.
//
// Solidity: function regulator() view returns(address)
func (_Vaultftm *VaultftmCallerSession) Regulator() (common.Address, error) {
	return _Vaultftm.Contract.Regulator(&_Vaultftm.CallOpts)
}

// SigDataUsed is a free data retrieval call binding the contract method 0x1ea1940e.
//
// Solidity: function sigDataUsed(bytes32 ) view returns(bool)
func (_Vaultftm *VaultftmCaller) SigDataUsed(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "sigDataUsed", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SigDataUsed is a free data retrieval call binding the contract method 0x1ea1940e.
//
// Solidity: function sigDataUsed(bytes32 ) view returns(bool)
func (_Vaultftm *VaultftmSession) SigDataUsed(arg0 [32]byte) (bool, error) {
	return _Vaultftm.Contract.SigDataUsed(&_Vaultftm.CallOpts, arg0)
}

// SigDataUsed is a free data retrieval call binding the contract method 0x1ea1940e.
//
// Solidity: function sigDataUsed(bytes32 ) view returns(bool)
func (_Vaultftm *VaultftmCallerSession) SigDataUsed(arg0 [32]byte) (bool, error) {
	return _Vaultftm.Contract.SigDataUsed(&_Vaultftm.CallOpts, arg0)
}

// SigToAddress is a free data retrieval call binding the contract method 0x3fec6b40.
//
// Solidity: function sigToAddress(bytes signData, bytes32 hash) pure returns(address)
func (_Vaultftm *VaultftmCaller) SigToAddress(opts *bind.CallOpts, signData []byte, hash [32]byte) (common.Address, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "sigToAddress", signData, hash)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SigToAddress is a free data retrieval call binding the contract method 0x3fec6b40.
//
// Solidity: function sigToAddress(bytes signData, bytes32 hash) pure returns(address)
func (_Vaultftm *VaultftmSession) SigToAddress(signData []byte, hash [32]byte) (common.Address, error) {
	return _Vaultftm.Contract.SigToAddress(&_Vaultftm.CallOpts, signData, hash)
}

// SigToAddress is a free data retrieval call binding the contract method 0x3fec6b40.
//
// Solidity: function sigToAddress(bytes signData, bytes32 hash) pure returns(address)
func (_Vaultftm *VaultftmCallerSession) SigToAddress(signData []byte, hash [32]byte) (common.Address, error) {
	return _Vaultftm.Contract.SigToAddress(&_Vaultftm.CallOpts, signData, hash)
}

// TotalDepositedToSCAmount is a free data retrieval call binding the contract method 0x6304541c.
//
// Solidity: function totalDepositedToSCAmount(address ) view returns(uint256)
func (_Vaultftm *VaultftmCaller) TotalDepositedToSCAmount(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "totalDepositedToSCAmount", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalDepositedToSCAmount is a free data retrieval call binding the contract method 0x6304541c.
//
// Solidity: function totalDepositedToSCAmount(address ) view returns(uint256)
func (_Vaultftm *VaultftmSession) TotalDepositedToSCAmount(arg0 common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.TotalDepositedToSCAmount(&_Vaultftm.CallOpts, arg0)
}

// TotalDepositedToSCAmount is a free data retrieval call binding the contract method 0x6304541c.
//
// Solidity: function totalDepositedToSCAmount(address ) view returns(uint256)
func (_Vaultftm *VaultftmCallerSession) TotalDepositedToSCAmount(arg0 common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.TotalDepositedToSCAmount(&_Vaultftm.CallOpts, arg0)
}

// WithdrawRequests is a free data retrieval call binding the contract method 0x65b5a00f.
//
// Solidity: function withdrawRequests(address , address ) view returns(uint256)
func (_Vaultftm *VaultftmCaller) WithdrawRequests(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "withdrawRequests", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// WithdrawRequests is a free data retrieval call binding the contract method 0x65b5a00f.
//
// Solidity: function withdrawRequests(address , address ) view returns(uint256)
func (_Vaultftm *VaultftmSession) WithdrawRequests(arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.WithdrawRequests(&_Vaultftm.CallOpts, arg0, arg1)
}

// WithdrawRequests is a free data retrieval call binding the contract method 0x65b5a00f.
//
// Solidity: function withdrawRequests(address , address ) view returns(uint256)
func (_Vaultftm *VaultftmCallerSession) WithdrawRequests(arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	return _Vaultftm.Contract.WithdrawRequests(&_Vaultftm.CallOpts, arg0, arg1)
}

// Withdrawed is a free data retrieval call binding the contract method 0xdca40d9e.
//
// Solidity: function withdrawed(bytes32 ) view returns(bool)
func (_Vaultftm *VaultftmCaller) Withdrawed(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Vaultftm.contract.Call(opts, &out, "withdrawed", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Withdrawed is a free data retrieval call binding the contract method 0xdca40d9e.
//
// Solidity: function withdrawed(bytes32 ) view returns(bool)
func (_Vaultftm *VaultftmSession) Withdrawed(arg0 [32]byte) (bool, error) {
	return _Vaultftm.Contract.Withdrawed(&_Vaultftm.CallOpts, arg0)
}

// Withdrawed is a free data retrieval call binding the contract method 0xdca40d9e.
//
// Solidity: function withdrawed(bytes32 ) view returns(bool)
func (_Vaultftm *VaultftmCallerSession) Withdrawed(arg0 [32]byte) (bool, error) {
	return _Vaultftm.Contract.Withdrawed(&_Vaultftm.CallOpts, arg0)
}

// Deposit is a paid mutator transaction binding the contract method 0xc791d705.
//
// Solidity: function deposit(string incognitoAddress, bytes32 txId, bytes signData) payable returns()
func (_Vaultftm *VaultftmTransactor) Deposit(opts *bind.TransactOpts, incognitoAddress string, txId [32]byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "deposit", incognitoAddress, txId, signData)
}

// Deposit is a paid mutator transaction binding the contract method 0xc791d705.
//
// Solidity: function deposit(string incognitoAddress, bytes32 txId, bytes signData) payable returns()
func (_Vaultftm *VaultftmSession) Deposit(incognitoAddress string, txId [32]byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.Deposit(&_Vaultftm.TransactOpts, incognitoAddress, txId, signData)
}

// Deposit is a paid mutator transaction binding the contract method 0xc791d705.
//
// Solidity: function deposit(string incognitoAddress, bytes32 txId, bytes signData) payable returns()
func (_Vaultftm *VaultftmTransactorSession) Deposit(incognitoAddress string, txId [32]byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.Deposit(&_Vaultftm.TransactOpts, incognitoAddress, txId, signData)
}

// DepositERC20 is a paid mutator transaction binding the contract method 0xa807b5bb.
//
// Solidity: function depositERC20(address token, uint256 amount, string incognitoAddress, bytes32 txId, bytes signData) returns()
func (_Vaultftm *VaultftmTransactor) DepositERC20(opts *bind.TransactOpts, token common.Address, amount *big.Int, incognitoAddress string, txId [32]byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "depositERC20", token, amount, incognitoAddress, txId, signData)
}

// DepositERC20 is a paid mutator transaction binding the contract method 0xa807b5bb.
//
// Solidity: function depositERC20(address token, uint256 amount, string incognitoAddress, bytes32 txId, bytes signData) returns()
func (_Vaultftm *VaultftmSession) DepositERC20(token common.Address, amount *big.Int, incognitoAddress string, txId [32]byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.DepositERC20(&_Vaultftm.TransactOpts, token, amount, incognitoAddress, txId, signData)
}

// DepositERC20 is a paid mutator transaction binding the contract method 0xa807b5bb.
//
// Solidity: function depositERC20(address token, uint256 amount, string incognitoAddress, bytes32 txId, bytes signData) returns()
func (_Vaultftm *VaultftmTransactorSession) DepositERC20(token common.Address, amount *big.Int, incognitoAddress string, txId [32]byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.DepositERC20(&_Vaultftm.TransactOpts, token, amount, incognitoAddress, txId, signData)
}

// Execute is a paid mutator transaction binding the contract method 0x8588ccd6.
//
// Solidity: function execute(address token, uint256 amount, address recipientToken, address exchangeAddress, bytes callData, bytes timestamp, bytes signData) payable returns()
func (_Vaultftm *VaultftmTransactor) Execute(opts *bind.TransactOpts, token common.Address, amount *big.Int, recipientToken common.Address, exchangeAddress common.Address, callData []byte, timestamp []byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "execute", token, amount, recipientToken, exchangeAddress, callData, timestamp, signData)
}

// Execute is a paid mutator transaction binding the contract method 0x8588ccd6.
//
// Solidity: function execute(address token, uint256 amount, address recipientToken, address exchangeAddress, bytes callData, bytes timestamp, bytes signData) payable returns()
func (_Vaultftm *VaultftmSession) Execute(token common.Address, amount *big.Int, recipientToken common.Address, exchangeAddress common.Address, callData []byte, timestamp []byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.Execute(&_Vaultftm.TransactOpts, token, amount, recipientToken, exchangeAddress, callData, timestamp, signData)
}

// Execute is a paid mutator transaction binding the contract method 0x8588ccd6.
//
// Solidity: function execute(address token, uint256 amount, address recipientToken, address exchangeAddress, bytes callData, bytes timestamp, bytes signData) payable returns()
func (_Vaultftm *VaultftmTransactorSession) Execute(token common.Address, amount *big.Int, recipientToken common.Address, exchangeAddress common.Address, callData []byte, timestamp []byte, signData []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.Execute(&_Vaultftm.TransactOpts, token, amount, recipientToken, exchangeAddress, callData, timestamp, signData)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _prevVault) returns()
func (_Vaultftm *VaultftmTransactor) Initialize(opts *bind.TransactOpts, _prevVault common.Address) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "initialize", _prevVault)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _prevVault) returns()
func (_Vaultftm *VaultftmSession) Initialize(_prevVault common.Address) (*types.Transaction, error) {
	return _Vaultftm.Contract.Initialize(&_Vaultftm.TransactOpts, _prevVault)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _prevVault) returns()
func (_Vaultftm *VaultftmTransactorSession) Initialize(_prevVault common.Address) (*types.Transaction, error) {
	return _Vaultftm.Contract.Initialize(&_Vaultftm.TransactOpts, _prevVault)
}

// RequestWithdraw is a paid mutator transaction binding the contract method 0xfee8efda.
//
// Solidity: function requestWithdraw(string incognitoAddress, address token, uint256 amount, bytes signData, bytes timestamp, bytes32 txId, bytes regulatorSig) returns()
func (_Vaultftm *VaultftmTransactor) RequestWithdraw(opts *bind.TransactOpts, incognitoAddress string, token common.Address, amount *big.Int, signData []byte, timestamp []byte, txId [32]byte, regulatorSig []byte) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "requestWithdraw", incognitoAddress, token, amount, signData, timestamp, txId, regulatorSig)
}

// RequestWithdraw is a paid mutator transaction binding the contract method 0xfee8efda.
//
// Solidity: function requestWithdraw(string incognitoAddress, address token, uint256 amount, bytes signData, bytes timestamp, bytes32 txId, bytes regulatorSig) returns()
func (_Vaultftm *VaultftmSession) RequestWithdraw(incognitoAddress string, token common.Address, amount *big.Int, signData []byte, timestamp []byte, txId [32]byte, regulatorSig []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.RequestWithdraw(&_Vaultftm.TransactOpts, incognitoAddress, token, amount, signData, timestamp, txId, regulatorSig)
}

// RequestWithdraw is a paid mutator transaction binding the contract method 0xfee8efda.
//
// Solidity: function requestWithdraw(string incognitoAddress, address token, uint256 amount, bytes signData, bytes timestamp, bytes32 txId, bytes regulatorSig) returns()
func (_Vaultftm *VaultftmTransactorSession) RequestWithdraw(incognitoAddress string, token common.Address, amount *big.Int, signData []byte, timestamp []byte, txId [32]byte, regulatorSig []byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.RequestWithdraw(&_Vaultftm.TransactOpts, incognitoAddress, token, amount, signData, timestamp, txId, regulatorSig)
}

// SetRegulator is a paid mutator transaction binding the contract method 0xcde0a4f8.
//
// Solidity: function setRegulator(address _regulator) returns()
func (_Vaultftm *VaultftmTransactor) SetRegulator(opts *bind.TransactOpts, _regulator common.Address) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "setRegulator", _regulator)
}

// SetRegulator is a paid mutator transaction binding the contract method 0xcde0a4f8.
//
// Solidity: function setRegulator(address _regulator) returns()
func (_Vaultftm *VaultftmSession) SetRegulator(_regulator common.Address) (*types.Transaction, error) {
	return _Vaultftm.Contract.SetRegulator(&_Vaultftm.TransactOpts, _regulator)
}

// SetRegulator is a paid mutator transaction binding the contract method 0xcde0a4f8.
//
// Solidity: function setRegulator(address _regulator) returns()
func (_Vaultftm *VaultftmTransactorSession) SetRegulator(_regulator common.Address) (*types.Transaction, error) {
	return _Vaultftm.Contract.SetRegulator(&_Vaultftm.TransactOpts, _regulator)
}

// SubmitBurnProof is a paid mutator transaction binding the contract method 0x73bf9651.
//
// Solidity: function submitBurnProof(bytes inst, uint256 heights, bytes32[] instPaths, bool[] instPathIsLefts, bytes32 instRoots, bytes32 blkData, uint256[] sigIdxs, uint8[] sigVs, bytes32[] sigRs, bytes32[] sigSs) returns()
func (_Vaultftm *VaultftmTransactor) SubmitBurnProof(opts *bind.TransactOpts, inst []byte, heights *big.Int, instPaths [][32]byte, instPathIsLefts []bool, instRoots [32]byte, blkData [32]byte, sigIdxs []*big.Int, sigVs []uint8, sigRs [][32]byte, sigSs [][32]byte) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "submitBurnProof", inst, heights, instPaths, instPathIsLefts, instRoots, blkData, sigIdxs, sigVs, sigRs, sigSs)
}

// SubmitBurnProof is a paid mutator transaction binding the contract method 0x73bf9651.
//
// Solidity: function submitBurnProof(bytes inst, uint256 heights, bytes32[] instPaths, bool[] instPathIsLefts, bytes32 instRoots, bytes32 blkData, uint256[] sigIdxs, uint8[] sigVs, bytes32[] sigRs, bytes32[] sigSs) returns()
func (_Vaultftm *VaultftmSession) SubmitBurnProof(inst []byte, heights *big.Int, instPaths [][32]byte, instPathIsLefts []bool, instRoots [32]byte, blkData [32]byte, sigIdxs []*big.Int, sigVs []uint8, sigRs [][32]byte, sigSs [][32]byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.SubmitBurnProof(&_Vaultftm.TransactOpts, inst, heights, instPaths, instPathIsLefts, instRoots, blkData, sigIdxs, sigVs, sigRs, sigSs)
}

// SubmitBurnProof is a paid mutator transaction binding the contract method 0x73bf9651.
//
// Solidity: function submitBurnProof(bytes inst, uint256 heights, bytes32[] instPaths, bool[] instPathIsLefts, bytes32 instRoots, bytes32 blkData, uint256[] sigIdxs, uint8[] sigVs, bytes32[] sigRs, bytes32[] sigSs) returns()
func (_Vaultftm *VaultftmTransactorSession) SubmitBurnProof(inst []byte, heights *big.Int, instPaths [][32]byte, instPathIsLefts []bool, instRoots [32]byte, blkData [32]byte, sigIdxs []*big.Int, sigVs []uint8, sigRs [][32]byte, sigSs [][32]byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.SubmitBurnProof(&_Vaultftm.TransactOpts, inst, heights, instPaths, instPathIsLefts, instRoots, blkData, sigIdxs, sigVs, sigRs, sigSs)
}

// UpdateAssets is a paid mutator transaction binding the contract method 0x1ed4276d.
//
// Solidity: function updateAssets(address[] assets, uint256[] amounts) returns(bool)
func (_Vaultftm *VaultftmTransactor) UpdateAssets(opts *bind.TransactOpts, assets []common.Address, amounts []*big.Int) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "updateAssets", assets, amounts)
}

// UpdateAssets is a paid mutator transaction binding the contract method 0x1ed4276d.
//
// Solidity: function updateAssets(address[] assets, uint256[] amounts) returns(bool)
func (_Vaultftm *VaultftmSession) UpdateAssets(assets []common.Address, amounts []*big.Int) (*types.Transaction, error) {
	return _Vaultftm.Contract.UpdateAssets(&_Vaultftm.TransactOpts, assets, amounts)
}

// UpdateAssets is a paid mutator transaction binding the contract method 0x1ed4276d.
//
// Solidity: function updateAssets(address[] assets, uint256[] amounts) returns(bool)
func (_Vaultftm *VaultftmTransactorSession) UpdateAssets(assets []common.Address, amounts []*big.Int) (*types.Transaction, error) {
	return _Vaultftm.Contract.UpdateAssets(&_Vaultftm.TransactOpts, assets, amounts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x1beb7de2.
//
// Solidity: function withdraw(bytes inst, uint256 heights, bytes32[] instPaths, bool[] instPathIsLefts, bytes32 instRoots, bytes32 blkData, uint256[] sigIdxs, uint8[] sigVs, bytes32[] sigRs, bytes32[] sigSs) returns()
func (_Vaultftm *VaultftmTransactor) Withdraw(opts *bind.TransactOpts, inst []byte, heights *big.Int, instPaths [][32]byte, instPathIsLefts []bool, instRoots [32]byte, blkData [32]byte, sigIdxs []*big.Int, sigVs []uint8, sigRs [][32]byte, sigSs [][32]byte) (*types.Transaction, error) {
	return _Vaultftm.contract.Transact(opts, "withdraw", inst, heights, instPaths, instPathIsLefts, instRoots, blkData, sigIdxs, sigVs, sigRs, sigSs)
}

// Withdraw is a paid mutator transaction binding the contract method 0x1beb7de2.
//
// Solidity: function withdraw(bytes inst, uint256 heights, bytes32[] instPaths, bool[] instPathIsLefts, bytes32 instRoots, bytes32 blkData, uint256[] sigIdxs, uint8[] sigVs, bytes32[] sigRs, bytes32[] sigSs) returns()
func (_Vaultftm *VaultftmSession) Withdraw(inst []byte, heights *big.Int, instPaths [][32]byte, instPathIsLefts []bool, instRoots [32]byte, blkData [32]byte, sigIdxs []*big.Int, sigVs []uint8, sigRs [][32]byte, sigSs [][32]byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.Withdraw(&_Vaultftm.TransactOpts, inst, heights, instPaths, instPathIsLefts, instRoots, blkData, sigIdxs, sigVs, sigRs, sigSs)
}

// Withdraw is a paid mutator transaction binding the contract method 0x1beb7de2.
//
// Solidity: function withdraw(bytes inst, uint256 heights, bytes32[] instPaths, bool[] instPathIsLefts, bytes32 instRoots, bytes32 blkData, uint256[] sigIdxs, uint8[] sigVs, bytes32[] sigRs, bytes32[] sigSs) returns()
func (_Vaultftm *VaultftmTransactorSession) Withdraw(inst []byte, heights *big.Int, instPaths [][32]byte, instPathIsLefts []bool, instRoots [32]byte, blkData [32]byte, sigIdxs []*big.Int, sigVs []uint8, sigRs [][32]byte, sigSs [][32]byte) (*types.Transaction, error) {
	return _Vaultftm.Contract.Withdraw(&_Vaultftm.TransactOpts, inst, heights, instPaths, instPathIsLefts, instRoots, blkData, sigIdxs, sigVs, sigRs, sigSs)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Vaultftm *VaultftmTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Vaultftm.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Vaultftm *VaultftmSession) Receive() (*types.Transaction, error) {
	return _Vaultftm.Contract.Receive(&_Vaultftm.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Vaultftm *VaultftmTransactorSession) Receive() (*types.Transaction, error) {
	return _Vaultftm.Contract.Receive(&_Vaultftm.TransactOpts)
}

// VaultftmDepositIterator is returned from FilterDeposit and is used to iterate over the raw logs and unpacked data for Deposit events raised by the Vaultftm contract.
type VaultftmDepositIterator struct {
	Event *VaultftmDeposit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *VaultftmDepositIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(VaultftmDeposit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(VaultftmDeposit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *VaultftmDepositIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *VaultftmDepositIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// VaultftmDeposit represents a Deposit event raised by the Vaultftm contract.
type VaultftmDeposit struct {
	Token            common.Address
	IncognitoAddress string
	Amount           *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterDeposit is a free log retrieval operation binding the contract event 0x2d4b597935f3cd67fb2eebf1db4debc934cee5c7baa7153f980fdbeb2e74084e.
//
// Solidity: event Deposit(address token, string incognitoAddress, uint256 amount)
func (_Vaultftm *VaultftmFilterer) FilterDeposit(opts *bind.FilterOpts) (*VaultftmDepositIterator, error) {

	logs, sub, err := _Vaultftm.contract.FilterLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return &VaultftmDepositIterator{contract: _Vaultftm.contract, event: "Deposit", logs: logs, sub: sub}, nil
}

// WatchDeposit is a free log subscription operation binding the contract event 0x2d4b597935f3cd67fb2eebf1db4debc934cee5c7baa7153f980fdbeb2e74084e.
//
// Solidity: event Deposit(address token, string incognitoAddress, uint256 amount)
func (_Vaultftm *VaultftmFilterer) WatchDeposit(opts *bind.WatchOpts, sink chan<- *VaultftmDeposit) (event.Subscription, error) {

	logs, sub, err := _Vaultftm.contract.WatchLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(VaultftmDeposit)
				if err := _Vaultftm.contract.UnpackLog(event, "Deposit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDeposit is a log parse operation binding the contract event 0x2d4b597935f3cd67fb2eebf1db4debc934cee5c7baa7153f980fdbeb2e74084e.
//
// Solidity: event Deposit(address token, string incognitoAddress, uint256 amount)
func (_Vaultftm *VaultftmFilterer) ParseDeposit(log types.Log) (*VaultftmDeposit, error) {
	event := new(VaultftmDeposit)
	if err := _Vaultftm.contract.UnpackLog(event, "Deposit", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// VaultftmUpdateIncognitoProxyIterator is returned from FilterUpdateIncognitoProxy and is used to iterate over the raw logs and unpacked data for UpdateIncognitoProxy events raised by the Vaultftm contract.
type VaultftmUpdateIncognitoProxyIterator struct {
	Event *VaultftmUpdateIncognitoProxy // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *VaultftmUpdateIncognitoProxyIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(VaultftmUpdateIncognitoProxy)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(VaultftmUpdateIncognitoProxy)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *VaultftmUpdateIncognitoProxyIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *VaultftmUpdateIncognitoProxyIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// VaultftmUpdateIncognitoProxy represents a UpdateIncognitoProxy event raised by the Vaultftm contract.
type VaultftmUpdateIncognitoProxy struct {
	NewIncognitoProxy common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterUpdateIncognitoProxy is a free log retrieval operation binding the contract event 0x204252dfe190ad6ef63db40a490f048b39f661de74628408f13cd0bb2d4c3446.
//
// Solidity: event UpdateIncognitoProxy(address newIncognitoProxy)
func (_Vaultftm *VaultftmFilterer) FilterUpdateIncognitoProxy(opts *bind.FilterOpts) (*VaultftmUpdateIncognitoProxyIterator, error) {

	logs, sub, err := _Vaultftm.contract.FilterLogs(opts, "UpdateIncognitoProxy")
	if err != nil {
		return nil, err
	}
	return &VaultftmUpdateIncognitoProxyIterator{contract: _Vaultftm.contract, event: "UpdateIncognitoProxy", logs: logs, sub: sub}, nil
}

// WatchUpdateIncognitoProxy is a free log subscription operation binding the contract event 0x204252dfe190ad6ef63db40a490f048b39f661de74628408f13cd0bb2d4c3446.
//
// Solidity: event UpdateIncognitoProxy(address newIncognitoProxy)
func (_Vaultftm *VaultftmFilterer) WatchUpdateIncognitoProxy(opts *bind.WatchOpts, sink chan<- *VaultftmUpdateIncognitoProxy) (event.Subscription, error) {

	logs, sub, err := _Vaultftm.contract.WatchLogs(opts, "UpdateIncognitoProxy")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(VaultftmUpdateIncognitoProxy)
				if err := _Vaultftm.contract.UnpackLog(event, "UpdateIncognitoProxy", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateIncognitoProxy is a log parse operation binding the contract event 0x204252dfe190ad6ef63db40a490f048b39f661de74628408f13cd0bb2d4c3446.
//
// Solidity: event UpdateIncognitoProxy(address newIncognitoProxy)
func (_Vaultftm *VaultftmFilterer) ParseUpdateIncognitoProxy(log types.Log) (*VaultftmUpdateIncognitoProxy, error) {
	event := new(VaultftmUpdateIncognitoProxy)
	if err := _Vaultftm.contract.UnpackLog(event, "UpdateIncognitoProxy", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// VaultftmUpdateTokenTotalIterator is returned from FilterUpdateTokenTotal and is used to iterate over the raw logs and unpacked data for UpdateTokenTotal events raised by the Vaultftm contract.
type VaultftmUpdateTokenTotalIterator struct {
	Event *VaultftmUpdateTokenTotal // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *VaultftmUpdateTokenTotalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(VaultftmUpdateTokenTotal)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(VaultftmUpdateTokenTotal)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *VaultftmUpdateTokenTotalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *VaultftmUpdateTokenTotalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// VaultftmUpdateTokenTotal represents a UpdateTokenTotal event raised by the Vaultftm contract.
type VaultftmUpdateTokenTotal struct {
	Assets  []common.Address
	Amounts []*big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterUpdateTokenTotal is a free log retrieval operation binding the contract event 0x6a7fbbcddfd518bb8c56b28ac6c7acb0f7ca093ed232eb3306e53d14e469895f.
//
// Solidity: event UpdateTokenTotal(address[] assets, uint256[] amounts)
func (_Vaultftm *VaultftmFilterer) FilterUpdateTokenTotal(opts *bind.FilterOpts) (*VaultftmUpdateTokenTotalIterator, error) {

	logs, sub, err := _Vaultftm.contract.FilterLogs(opts, "UpdateTokenTotal")
	if err != nil {
		return nil, err
	}
	return &VaultftmUpdateTokenTotalIterator{contract: _Vaultftm.contract, event: "UpdateTokenTotal", logs: logs, sub: sub}, nil
}

// WatchUpdateTokenTotal is a free log subscription operation binding the contract event 0x6a7fbbcddfd518bb8c56b28ac6c7acb0f7ca093ed232eb3306e53d14e469895f.
//
// Solidity: event UpdateTokenTotal(address[] assets, uint256[] amounts)
func (_Vaultftm *VaultftmFilterer) WatchUpdateTokenTotal(opts *bind.WatchOpts, sink chan<- *VaultftmUpdateTokenTotal) (event.Subscription, error) {

	logs, sub, err := _Vaultftm.contract.WatchLogs(opts, "UpdateTokenTotal")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(VaultftmUpdateTokenTotal)
				if err := _Vaultftm.contract.UnpackLog(event, "UpdateTokenTotal", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateTokenTotal is a log parse operation binding the contract event 0x6a7fbbcddfd518bb8c56b28ac6c7acb0f7ca093ed232eb3306e53d14e469895f.
//
// Solidity: event UpdateTokenTotal(address[] assets, uint256[] amounts)
func (_Vaultftm *VaultftmFilterer) ParseUpdateTokenTotal(log types.Log) (*VaultftmUpdateTokenTotal, error) {
	event := new(VaultftmUpdateTokenTotal)
	if err := _Vaultftm.contract.UnpackLog(event, "UpdateTokenTotal", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// VaultftmWithdrawIterator is returned from FilterWithdraw and is used to iterate over the raw logs and unpacked data for Withdraw events raised by the Vaultftm contract.
type VaultftmWithdrawIterator struct {
	Event *VaultftmWithdraw // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *VaultftmWithdrawIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(VaultftmWithdraw)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(VaultftmWithdraw)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *VaultftmWithdrawIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *VaultftmWithdrawIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// VaultftmWithdraw represents a Withdraw event raised by the Vaultftm contract.
type VaultftmWithdraw struct {
	Token  common.Address
	To     common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterWithdraw is a free log retrieval operation binding the contract event 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb.
//
// Solidity: event Withdraw(address token, address to, uint256 amount)
func (_Vaultftm *VaultftmFilterer) FilterWithdraw(opts *bind.FilterOpts) (*VaultftmWithdrawIterator, error) {

	logs, sub, err := _Vaultftm.contract.FilterLogs(opts, "Withdraw")
	if err != nil {
		return nil, err
	}
	return &VaultftmWithdrawIterator{contract: _Vaultftm.contract, event: "Withdraw", logs: logs, sub: sub}, nil
}

// WatchWithdraw is a free log subscription operation binding the contract event 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb.
//
// Solidity: event Withdraw(address token, address to, uint256 amount)
func (_Vaultftm *VaultftmFilterer) WatchWithdraw(opts *bind.WatchOpts, sink chan<- *VaultftmWithdraw) (event.Subscription, error) {

	logs, sub, err := _Vaultftm.contract.WatchLogs(opts, "Withdraw")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(VaultftmWithdraw)
				if err := _Vaultftm.contract.UnpackLog(event, "Withdraw", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdraw is a log parse operation binding the contract event 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb.
//
// Solidity: event Withdraw(address token, address to, uint256 amount)
func (_Vaultftm *VaultftmFilterer) ParseWithdraw(log types.Log) (*VaultftmWithdraw, error) {
	event := new(VaultftmWithdraw)
	if err := _Vaultftm.contract.UnpackLog(event, "Withdraw", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
