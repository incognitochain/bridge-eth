{
  "address": "0x76318093c374e39B260120EBFCe6aBF7f75c8D28",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_incognito",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousIncognito",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newIncognito",
          "type": "address"
        }
      ],
      "name": "IncognitoChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousSuccessor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newSuccessor",
          "type": "address"
        }
      ],
      "name": "SuccessorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incognito",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSuccessor",
          "type": "address"
        }
      ],
      "name": "retire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "successor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newIncognito",
          "type": "address"
        }
      ],
      "name": "upgradeIncognito",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0e1088976321d5743558484e9228b258d6de71438f75336fdb49199b31409db2",
  "receipt": {
    "to": null,
    "from": "0xb5A581c6EA895fBfD0d7529ac04e24Bf12804c2d",
    "contractAddress": "0x76318093c374e39B260120EBFCe6aBF7f75c8D28",
    "transactionIndex": 3,
    "gasUsed": "842217",
    "logsBloom": "0x
    "blockHash": "0x1f7e13ec919b98557730dc1c5b54196fbcd98e5ad68b06affbf107672999282a",
    "transactionHash": "0x0e1088976321d5743558484e9228b258d6de71438f75336fdb49199b31409db2",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 27365795,
        "transactionHash": "0x0e1088976321d5743558484e9228b258d6de71438f75336fdb49199b31409db2",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b5a581c6ea895fbfd0d7529ac04e24bf12804c2d",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000005b293c8645d64e00000000000000000000000000000000000000000000000014621a66dbe486d30000000000000000000000000000000000000000000020a01758ec3a93516e770000000000000000000000000000000000000000000000001406f12a559eb0850000000000000000000000000000000000000000000020a017b41577199744c5",
        "logIndex": 7,
        "blockHash": "0x1f7e13ec919b98557730dc1c5b54196fbcd98e5ad68b06affbf107672999282a"
      }
    ],
    "blockNumber": 27365795,
    "cumulativeGasUsed": "1434759",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x64B464037Ef0Aa3D1a95A5c04BC77e8667870E90",
    "0x9B1706BCC9c623138Fe04a08E9c3CD5B9156c28e",
    "0x5543eab46Da92d4b26186508c9bEE57aC6309033",
    "0xc4d66de80000000000000000000000000000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "6f687e5293434a3c4076cf73e6cc7585",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_incognito\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousIncognito\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newIncognito\",\"type\":\"address\"}],\"name\":\"IncognitoChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousSuccessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newSuccessor\",\"type\":\"address\"}],\"name\":\"SuccessorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incognito\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSuccessor\",\"type\":\"address\"}],\"name\":\"retire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"successor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newIncognito\",\"type\":\"address\"}],\"name\":\"upgradeIncognito\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin.  To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand:  1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\".  These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation.  Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"events\":{\"Claim(address)\":{\"details\":\"Emitted when the successor claimed thronze.*\"},\"IncognitoChanged(address,address)\":{\"details\":\"Emitted when the incognito proxy has changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the admin pause contract.*\"},\"SuccessorChanged(address,address)\":{\"details\":\"Emitted when the successor account has changed.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the admin unpaused contract.*\"}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"claim()\":{\"details\":\"Successor claims thronze.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"incognito()\":{\"details\":\"Returns the current incognito proxy.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x6c1fc16c781d41e11abf5619c272a94b10ccafab380060da4bd63325467b854e`\"},\"pause()\":{\"details\":\"Admin pause contract.\"},\"paused()\":{\"details\":\"Returns the current paused value.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450`\"},\"retire(address)\":{\"details\":\"Admin retire to prepare transfer thronze to successor.\"},\"successor()\":{\"details\":\"Returns the current successor.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f8`\"},\"unpause()\":{\"details\":\"Admin unpause contract.\"},\"upgradeIncognito(address)\":{\"details\":\"Admin upgrade incognito proxy.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy.  NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract.  NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_INCOGNITO_SLOT\":{\"details\":\"Storage slot with the incognito proxy. This is the keccak-256 hash of \\\"eip1967.proxy.incognito.\\\" subtracted by 1, and is validated in the constructor.\"},\"_PAUSED_SLOT\":{\"details\":\"Storage slot with status paused or not. This is the keccak-256 hash of \\\"eip1967.proxy.paused\\\" subtracted by 1, and is validated in the constructor.\"},\"_SUCCESSOR_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.successor\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/transparentUpgraded.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n * \\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n * \\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     * \\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 { revert(0, returndatasize()) }\\n            default { return(0, returndatasize()) }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal virtual view returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     * \\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback () payable external {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive () payable external {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     * \\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {\\n    }\\n}\",\"keccak256\":\"0x7426348c7cae706c3e862d16f2814b7530e5315896bf6ed8c7a91d875464f45e\",\"license\":\"MIT\"},\"contracts/transparentUpgraded.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\nimport \\\"./upgradableProxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n * \\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n * \\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n * \\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n * \\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is UpgradeableProxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\\n     */\\n    constructor(address _logic, address _admin, address _incognito, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        assert(_SUCCESSOR_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.successor\\\")) - 1));\\n        assert(_PAUSED_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.paused\\\")) - 1));\\n        assert(_INCOGNITO_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.incognito.\\\")) - 1));\\n        _setAdmin(_admin);\\n        _setIncognito(_incognito);\\n    }\\n\\n    /**\\n     * @dev Emitted when the successor account has changed.\\n     */\\n    event SuccessorChanged(address previousSuccessor, address newSuccessor);\\n    \\n    /**\\n     * @dev Emitted when the incognito proxy has changed.\\n     */\\n    event IncognitoChanged(address previousIncognito, address newIncognito);\\n\\n    /**\\n     * @dev Emitted when the successor claimed thronze.\\n     **/\\n    event Claim(address claimer);\\n    \\n    /**\\n     * @dev Emitted when the admin pause contract.\\n     **/\\n    event Paused(address admin);\\n    \\n    /**\\n     * @dev Emitted when the admin unpaused contract.\\n     **/\\n    event Unpaused(address admin);\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 private constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.successor\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 private constant _SUCCESSOR_SLOT = 0x7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f8;\\n\\n    /**\\n     * @dev Storage slot with status paused or not.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.paused\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 private constant _PAUSED_SLOT = 0x8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450;\\n    \\n    /**\\n     * @dev Storage slot with the incognito proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.incognito.\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 private constant _INCOGNITO_SLOT = 0x62135fc083646fdb4e1a9d700e351b886a4a5a39da980650269edd1ade91ffd2;\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _admin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     * \\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     * \\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address) {\\n        return _admin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     * \\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     * \\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address) {\\n        return _implementation();\\n    }\\n\\n    /**\\n     * @dev Returns the current successor.\\n     * \\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     * \\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f8`\\n     */\\n    function successor() external ifAdmin returns (address) {\\n        return _successor();\\n    }\\n\\n    /**\\n     * @dev Returns the current paused value.\\n     * \\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     * \\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450`\\n     */\\n    function paused() external ifAdmin returns (bool) {\\n        return _paused();\\n    }\\n    \\n    /**\\n     * @dev Returns the current incognito proxy.\\n     * \\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     * \\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x6c1fc16c781d41e11abf5619c272a94b10ccafab380060da4bd63325467b854e`\\n     */\\n    function incognito() external ifAdmin returns (address) {\\n        return _incognito();\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     * \\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeTo(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     * \\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeTo(newImplementation);\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success,) = newImplementation.delegatecall(data);\\n        require(success, \\\"DELEGATECALL failed\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view returns (address adm) {\\n        bytes32 slot = _ADMIN_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            adm := sload(slot)\\n        }\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        bytes32 slot = _ADMIN_SLOT;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, newAdmin)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current successor.\\n     */\\n    function _successor() internal view returns (address sor) {\\n        bytes32 slot = _SUCCESSOR_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sor := sload(slot)\\n        }\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 successor slot.\\n     */\\n    function _setSuccesor(address newSuccessor) private {\\n        bytes32 slot = _SUCCESSOR_SLOT;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, newSuccessor)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current paused value.\\n     */\\n    function _paused() internal view returns (bool psd) {\\n        bytes32 slot = _PAUSED_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            psd := sload(slot)\\n        }\\n    }\\n\\n    /**\\n     * @dev Stores a new paused value in the EIP1967 paused slot.\\n     */\\n    function _setPaused(bool psd) private {\\n        bytes32 slot = _PAUSED_SLOT;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, psd)\\n        }\\n    }\\n    \\n    /**\\n     * @dev Returns the current incognito proxy.\\n     */\\n    function _incognito() internal view returns (address icg) {\\n        bytes32 slot = _INCOGNITO_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            icg := sload(slot)\\n        }\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 incognito proxy slot.\\n     */\\n    function _setIncognito(address newIncognito) private {\\n        bytes32 slot = _INCOGNITO_SLOT;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, newIncognito)\\n        }\\n    }\\n\\n    /**\\n     * @dev Admin retire to prepare transfer thronze to successor.\\n     */\\n    function retire(address newSuccessor) external ifAdmin {\\n        require(newSuccessor != address(0), \\\"TransparentUpgradeableProxy: successor is the zero address\\\");\\n        emit SuccessorChanged(_successor(), newSuccessor);\\n        _setSuccesor(newSuccessor);\\n    }\\n\\n    /**\\n     * @dev Successor claims thronze.\\n     */\\n    function claim() external {\\n        if (msg.sender == _successor()) {\\n            emit Claim(_successor());\\n            _setAdmin(_successor());\\n        } else{\\n            _fallback();\\n        }\\n    }\\n    \\n    /**\\n     * @dev Admin pause contract.\\n     */\\n    function pause() external ifAdmin {\\n        require(!_paused(), \\\"TransparentUpgradeableProxy: contract paused already\\\");\\n        _setPaused(true);\\n    }\\n    \\n    /**\\n     * @dev Admin unpause contract.\\n     */\\n    function unpause() external ifAdmin {\\n        require(_paused(), \\\"TransparentUpgradeableProxy: contract not paused\\\");\\n        _setPaused(false);\\n    }\\n    \\n     /**\\n     * @dev Admin upgrade incognito proxy.\\n     */\\n    function upgradeIncognito(address newIncognito) external ifAdmin {\\n        require(newIncognito != address(0), \\\"TransparentUpgradeableProxy: incognito proxy is the zero address\\\");\\n        emit IncognitoChanged(_incognito(), newIncognito);\\n        _setIncognito(newIncognito);\\n    }\\n    \\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal override virtual {\\n        require(msg.sender != _admin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        require(!_paused(), \\\"TransparentUpgradeableProxy: contract is paused\\\");\\n        super._beforeFallback();\\n    }\\n}\",\"keccak256\":\"0x1ee108e1d59632f1f5d11839c6a4b9686cbe529c587a30dcabd719f98050905b\",\"license\":\"MIT\"},\"contracts/upgradableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\nimport \\\"./proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n * \\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\\n * {TransparentUpgradeableProxy}.\\n */\\ncontract UpgradeableProxy is Proxy {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     * \\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) public payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _setImplementation(_logic);\\n        if(_data.length > 0) {\\n            // solhint-disable-next-line avoid-low-level-calls\\n            (bool success,) = _logic.delegatecall(_data);\\n            require(success, \\\"DELEGATECALL failed\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal override view returns (address impl) {\\n        bytes32 slot = _IMPLEMENTATION_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            impl := sload(slot)\\n        }\\n    }\\n\\n    /**\\n     * @dev Upgrades the proxy to a new implementation.\\n     * \\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(isContract(newImplementation), \\\"UpgradeableProxy: new implementation is not a contract\\\");\\n\\n        bytes32 slot = _IMPLEMENTATION_SLOT;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, newImplementation)\\n        }\\n    }\\n    \\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n}\",\"keccak256\":\"0x9fbc70e287c46eb400060be72aa4fe90ba9058db29f984008bc142177a31f9b1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260405162000f8238038062000f82833981810160405260808110156200002957600080fd5b8151602083015160408085015160608601805192519496939591949391820192846401000000008211156200005d57600080fd5b9083019060208201858111156200007357600080fd5b82516401000000008111828201881017156200008e57600080fd5b82525081516020918201929091019080838360005b83811015620000bd578181015183820152602001620000a3565b50505050905090810190601f168015620000eb5780820380516001836020036101000a031916815260200191505b5060405250859150829050620001018262000230565b80511562000207576000826001600160a01b0316826040518082805190602001908083835b60208310620001475780518252601f19909201916020918201910162000126565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114620001a9576040519150601f19603f3d011682016040523d82523d6000602084013e620001ae565b606091505b505090508062000205576040805162461bcd60e51b815260206004820152601360248201527f44454c454741544543414c4c206661696c656400000000000000000000000000604482015290519081900360640190fd5b505b50620002109050565b6200021b836200029c565b6200022682620002c0565b50505050620002ea565b6200023b81620002e4565b620002785760405162461bcd60e51b815260040180806020018281038252603681526020018062000f4c6036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b7f62135fc083646fdb4e1a9d700e351b886a4a5a39da980650269edd1ade91ffd255565b3b151590565b610c5280620002fa6000396000f3fe6080604052600436106100cb5760003560e01c80635c975abb116100745780638a9845381161004e5780638a984538146102765780639e6371ba1461028b578063f851a440146102be576100da565b80635c975abb146102235780636ff968c31461024c5780638456cb5914610261576100da565b80634e71d92d116100a55780634e71d92d1461015d5780634f1ef286146101725780635c60da1b146101f2576100da565b80631c587771146100e25780633659cfe6146101155780633f4ba83a14610148576100da565b366100da576100d86102d3565b005b6100d86102d3565b3480156100ee57600080fd5b506100d86004803603602081101561010557600080fd5b50356001600160a01b03166102ed565b34801561012157600080fd5b506100d86004803603602081101561013857600080fd5b50356001600160a01b03166103b7565b34801561015457600080fd5b506100d86103e1565b34801561016957600080fd5b506100d861045c565b6100d86004803603604081101561018857600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101b357600080fd5b8201836020820111156101c557600080fd5b803590602001918460018302840111640100000000831117156101e757600080fd5b5090925090506104d1565b3480156101fe57600080fd5b506102076105c6565b604080516001600160a01b039092168252519081900360200190f35b34801561022f57600080fd5b50610238610603565b604080519115158252519081900360200190f35b34801561025857600080fd5b5061020761062e565b34801561026d57600080fd5b506100d8610659565b34801561028257600080fd5b506102076106c8565b34801561029757600080fd5b506100d8600480360360208110156102ae57600080fd5b50356001600160a01b03166106f3565b3480156102ca57600080fd5b506102076107ad565b6102db6107d8565b6102eb6102e661087c565b6108a1565b565b6102f56108c5565b6001600160a01b0316336001600160a01b031614156103ac576001600160a01b0381166103535760405162461bcd60e51b8152600401808060200182810382526040815260200180610b086040913960400191505060405180910390fd5b7f86d392a76e88298144124db3dd7265135d76810f52d747dc329a0f7722135e5c61037c6108ea565b604080516001600160a01b03928316815291841660208301528051918290030190a16103a78161090f565b6103b4565b6103b46102d3565b50565b6103bf6108c5565b6001600160a01b0316336001600160a01b031614156103ac576103a781610933565b6103e96108c5565b6001600160a01b0316336001600160a01b031614156104545761040a610973565b6104455760405162461bcd60e51b8152600401808060200182810382526030815260200180610bab6030913960400191505060405180910390fd5b61044f6000610998565b6102eb565b6102eb6102d3565b6104646109bc565b6001600160a01b0316336001600160a01b03161415610454577f0c7ef932d3b91976772937f18d5ef9b39a9930bef486b576c374f047c4b512dc6104a66109bc565b604080516001600160a01b039092168252519081900360200190a161044f6104cc6109bc565b6109e1565b6104d96108c5565b6001600160a01b0316336001600160a01b031614156105b9576104fb83610933565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610558576040519150601f19603f3d011682016040523d82523d6000602084013e61055d565b606091505b50509050806105b3576040805162461bcd60e51b815260206004820152601360248201527f44454c454741544543414c4c206661696c656400000000000000000000000000604482015290519081900360640190fd5b506105c1565b6105c16102d3565b505050565b60006105d06108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f161087c565b9050610600565b6106006102d3565b90565b600061060d6108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f1610973565b60006106386108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f16109bc565b6106616108c5565b6001600160a01b0316336001600160a01b0316141561045457610682610973565b156106be5760405162461bcd60e51b8152600401808060200182810382526034815260200180610b486034913960400191505060405180910390fd5b61044f6001610998565b60006106d26108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f16108ea565b6106fb6108c5565b6001600160a01b0316336001600160a01b031614156103ac576001600160a01b0381166107595760405162461bcd60e51b815260040180806020018281038252603a815260200180610a98603a913960400191505060405180910390fd5b7ff966f857c3c376f2e1df873bbe2596a18675dc056dc3465dfbbe8fe9ac02c9746107826109bc565b604080516001600160a01b03928316815291841660208301528051918290030190a16103a781610a05565b60006107b76108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f16108c5565b6107e06108c5565b6001600160a01b0316336001600160a01b031614156108305760405162461bcd60e51b8152600401808060200182810382526042815260200180610bdb6042913960600191505060405180910390fd5b610838610973565b156108745760405162461bcd60e51b815260040180806020018281038252602f815260200180610b7c602f913960400191505060405180910390fd5b6102eb6102eb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156108c0573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b7f62135fc083646fdb4e1a9d700e351b886a4a5a39da980650269edd1ade91ffd25490565b7f62135fc083646fdb4e1a9d700e351b886a4a5a39da980650269edd1ade91ffd255565b61093c81610a29565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa02487114505490565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa024871145055565b7f7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f85490565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b7f7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f855565b610a3281610a91565b610a6d5760405162461bcd60e51b8152600401808060200182810382526036815260200180610ad26036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b3b15159056fe5472616e73706172656e745570677261646561626c6550726f78793a20737563636573736f7220697320746865207a65726f20616464726573735570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e74726163745472616e73706172656e745570677261646561626c6550726f78793a20696e636f676e69746f2070726f787920697320746865207a65726f20616464726573735472616e73706172656e745570677261646561626c6550726f78793a20636f6e74726163742070617573656420616c72656164795472616e73706172656e745570677261646561626c6550726f78793a20636f6e7472616374206973207061757365645472616e73706172656e745570677261646561626c6550726f78793a20636f6e7472616374206e6f74207061757365645472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574a26469706673582212208a2221fc52503ec012c89167c14d5be48818bb27ff7a19027539ddf7ff388ce164736f6c634300060c00335570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "0x6080604052600436106100cb5760003560e01c80635c975abb116100745780638a9845381161004e5780638a984538146102765780639e6371ba1461028b578063f851a440146102be576100da565b80635c975abb146102235780636ff968c31461024c5780638456cb5914610261576100da565b80634e71d92d116100a55780634e71d92d1461015d5780634f1ef286146101725780635c60da1b146101f2576100da565b80631c587771146100e25780633659cfe6146101155780633f4ba83a14610148576100da565b366100da576100d86102d3565b005b6100d86102d3565b3480156100ee57600080fd5b506100d86004803603602081101561010557600080fd5b50356001600160a01b03166102ed565b34801561012157600080fd5b506100d86004803603602081101561013857600080fd5b50356001600160a01b03166103b7565b34801561015457600080fd5b506100d86103e1565b34801561016957600080fd5b506100d861045c565b6100d86004803603604081101561018857600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101b357600080fd5b8201836020820111156101c557600080fd5b803590602001918460018302840111640100000000831117156101e757600080fd5b5090925090506104d1565b3480156101fe57600080fd5b506102076105c6565b604080516001600160a01b039092168252519081900360200190f35b34801561022f57600080fd5b50610238610603565b604080519115158252519081900360200190f35b34801561025857600080fd5b5061020761062e565b34801561026d57600080fd5b506100d8610659565b34801561028257600080fd5b506102076106c8565b34801561029757600080fd5b506100d8600480360360208110156102ae57600080fd5b50356001600160a01b03166106f3565b3480156102ca57600080fd5b506102076107ad565b6102db6107d8565b6102eb6102e661087c565b6108a1565b565b6102f56108c5565b6001600160a01b0316336001600160a01b031614156103ac576001600160a01b0381166103535760405162461bcd60e51b8152600401808060200182810382526040815260200180610b086040913960400191505060405180910390fd5b7f86d392a76e88298144124db3dd7265135d76810f52d747dc329a0f7722135e5c61037c6108ea565b604080516001600160a01b03928316815291841660208301528051918290030190a16103a78161090f565b6103b4565b6103b46102d3565b50565b6103bf6108c5565b6001600160a01b0316336001600160a01b031614156103ac576103a781610933565b6103e96108c5565b6001600160a01b0316336001600160a01b031614156104545761040a610973565b6104455760405162461bcd60e51b8152600401808060200182810382526030815260200180610bab6030913960400191505060405180910390fd5b61044f6000610998565b6102eb565b6102eb6102d3565b6104646109bc565b6001600160a01b0316336001600160a01b03161415610454577f0c7ef932d3b91976772937f18d5ef9b39a9930bef486b576c374f047c4b512dc6104a66109bc565b604080516001600160a01b039092168252519081900360200190a161044f6104cc6109bc565b6109e1565b6104d96108c5565b6001600160a01b0316336001600160a01b031614156105b9576104fb83610933565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610558576040519150601f19603f3d011682016040523d82523d6000602084013e61055d565b606091505b50509050806105b3576040805162461bcd60e51b815260206004820152601360248201527f44454c454741544543414c4c206661696c656400000000000000000000000000604482015290519081900360640190fd5b506105c1565b6105c16102d3565b505050565b60006105d06108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f161087c565b9050610600565b6106006102d3565b90565b600061060d6108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f1610973565b60006106386108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f16109bc565b6106616108c5565b6001600160a01b0316336001600160a01b0316141561045457610682610973565b156106be5760405162461bcd60e51b8152600401808060200182810382526034815260200180610b486034913960400191505060405180910390fd5b61044f6001610998565b60006106d26108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f16108ea565b6106fb6108c5565b6001600160a01b0316336001600160a01b031614156103ac576001600160a01b0381166107595760405162461bcd60e51b815260040180806020018281038252603a815260200180610a98603a913960400191505060405180910390fd5b7ff966f857c3c376f2e1df873bbe2596a18675dc056dc3465dfbbe8fe9ac02c9746107826109bc565b604080516001600160a01b03928316815291841660208301528051918290030190a16103a781610a05565b60006107b76108c5565b6001600160a01b0316336001600160a01b031614156105f8576105f16108c5565b6107e06108c5565b6001600160a01b0316336001600160a01b031614156108305760405162461bcd60e51b8152600401808060200182810382526042815260200180610bdb6042913960600191505060405180910390fd5b610838610973565b156108745760405162461bcd60e51b815260040180806020018281038252602f815260200180610b7c602f913960400191505060405180910390fd5b6102eb6102eb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156108c0573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b7f62135fc083646fdb4e1a9d700e351b886a4a5a39da980650269edd1ade91ffd25490565b7f62135fc083646fdb4e1a9d700e351b886a4a5a39da980650269edd1ade91ffd255565b61093c81610a29565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa02487114505490565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa024871145055565b7f7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f85490565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b7f7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f855565b610a3281610a91565b610a6d5760405162461bcd60e51b8152600401808060200182810382526036815260200180610ad26036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b3b15159056fe5472616e73706172656e745570677261646561626c6550726f78793a20737563636573736f7220697320746865207a65726f20616464726573735570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e74726163745472616e73706172656e745570677261646561626c6550726f78793a20696e636f676e69746f2070726f787920697320746865207a65726f20616464726573735472616e73706172656e745570677261646561626c6550726f78793a20636f6e74726163742070617573656420616c72656164795472616e73706172656e745570677261646561626c6550726f78793a20636f6e7472616374206973207061757365645472616e73706172656e745570677261646561626c6550726f78793a20636f6e7472616374206e6f74207061757365645472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574a26469706673582212208a2221fc52503ec012c89167c14d5be48818bb27ff7a19027539ddf7ff388ce164736f6c634300060c0033",
  "devdoc": {
    "details": "This contract implements a proxy that is upgradeable by an admin.  To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand:  1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\".  These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation.  Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
    "events": {
      "Claim(address)": {
        "details": "Emitted when the successor claimed thronze.*"
      },
      "IncognitoChanged(address,address)": {
        "details": "Emitted when the incognito proxy has changed."
      },
      "Paused(address)": {
        "details": "Emitted when the admin pause contract.*"
      },
      "SuccessorChanged(address,address)": {
        "details": "Emitted when the successor account has changed."
      },
      "Unpaused(address)": {
        "details": "Emitted when the admin unpaused contract.*"
      }
    },
    "kind": "dev",
    "methods": {
      "admin()": {
        "details": "Returns the current admin.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
      },
      "claim()": {
        "details": "Successor claims thronze."
      },
      "constructor": {
        "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}."
      },
      "implementation()": {
        "details": "Returns the current implementation.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
      },
      "incognito()": {
        "details": "Returns the current incognito proxy.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x6c1fc16c781d41e11abf5619c272a94b10ccafab380060da4bd63325467b854e`"
      },
      "pause()": {
        "details": "Admin pause contract."
      },
      "paused()": {
        "details": "Returns the current paused value.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450`"
      },
      "retire(address)": {
        "details": "Admin retire to prepare transfer thronze to successor."
      },
      "successor()": {
        "details": "Returns the current successor.  NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.  TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x7b13fc932b1063ca775d428558b73e20eab6804d4d9b5a148d7cbae4488973f8`"
      },
      "unpause()": {
        "details": "Admin unpause contract."
      },
      "upgradeIncognito(address)": {
        "details": "Admin upgrade incognito proxy."
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy.  NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract.  NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
      }
    },
    "stateVariables": {
      "_ADMIN_SLOT": {
        "details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
      },
      "_INCOGNITO_SLOT": {
        "details": "Storage slot with the incognito proxy. This is the keccak-256 hash of \"eip1967.proxy.incognito.\" subtracted by 1, and is validated in the constructor."
      },
      "_PAUSED_SLOT": {
        "details": "Storage slot with status paused or not. This is the keccak-256 hash of \"eip1967.proxy.paused\" subtracted by 1, and is validated in the constructor."
      },
      "_SUCCESSOR_SLOT": {
        "details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.successor\" subtracted by 1, and is validated in the constructor."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}